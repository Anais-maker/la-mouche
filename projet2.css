* {
  box-sizing: border-box;
/*border-box indique au navigateur de prendre en compte la bordure et
le remplissage dans la valeur définie pour la largeur et la hauteur.
Autrement dit, si on définit un élément avec une largeur de 100 pixels,
ces 100 pixels inclueront la bordure et le remplissage éventuellement ajoutés
et c'est le contenu de la boîte qui sera compressé pour absorber
cette largeur supplémentaire. Cela permet généralement de simplifier
le dimensionnement des éléments.*/
}

html, body {
    height: 99%;
    width: 99%;
}
.ZoneDeJeu {
  display: grid;
  grid-template-rows: 10% 1fr 3%;
  grid-template-columns: 1fr 6fr 1fr;
  grid-gap : 25px;
  height: 98%;
  width: 80%;
  margin-left: 10%;
  margin-right: 10%;
  margin-bottom: 0;
  margin-top: 0;

}

.ZoneDeJeu > * {
    border: 1px solid black;
}

.ZoneDeJeu .total-count {
    grid-area: 1/1/2/4;
}

.ZoneDeJeu ul{
    grid-area: 2/2/3/3;
    list-style: none;
}

body {
  counter-reset: game; /*On initialise le compteur, appelé "game", à 0*/
  text-align: center; /*On aligne le texte horizobtalement*/
  background: #e9b58b; /*Couleur de fond*/
  font-family: 'Open Sans', 'Helvetica', 'Arial', sans-serif;
  color: #333;
}

input:checked { /*lorsque'on l'on clique sur une cible ...*/
  counter-increment: game; /*.. on incrémente (+1) le compteur, appelé "game"*/
}

.total-count::after { /*Ajoute un texte après l'élément' de classe "total-count"*/
  content: counter(game);/*Ajoute le nombre de points*/
}


.total-count {
  font-size: 1.75em;
  position: absolute;
  width: 80%;
  margin-right: 10%;
  margin-left: 10%;
  text-align: center;
  z-index: 300;
  background-color: white;
}



div {
  width: calc(33% - .5em);
  margin-bottom: 1em;
  height: 10em;
  list-style: none;
  position: relative;
  outline: 4px solid white;
  background: #64ddf3;
}


input[type="checkbox"] {
  width: 100px;
  height: 100px;
  position: absolute;
  cursor: crosshair;
  background-image: url("mouche.png");
  background-size: 90px, 90px;
  border-radius: 50%;
  display: block;
  left: 0;
  right: 0;
  text-align: center;
  margin: 0 auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: 6px solid red;
  -webkit-animation: hide-target infinite alternate ease-in-out;
          animation: hide-target infinite alternate ease-in-out;
-webkit-animation-duration: 4s;
animation-duration: 4s;
  z-index: 1;
  position: relative;
}

input[type="checkbox"]:focus {
  outline: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
input[type="checkbox"]:checked {
  pointer-events: none;
  -webkit-filter: grayscale(1) opacity(0.75);
          filter: grayscale(1) opacity(0.75);
  -webkit-animation: none;
          animation: none;
}
input[type="checkbox"]:checked:after {
  content: '+1!';
  padding: .5em;
  margin: 1em 0 0 5em;
  font-size: 2.5em;
  font-weight: 600;
}


@-webkit-keyframes hide-target {
    0% {
     top: 0;
   }
  10% {
      left: 40%;
  }
   25% {
     top: 400%;
   }
   
   50%{
       left: -35%;
   }
   100% {
     top: 200%;
   }
}

@keyframes hide-target {
  0% {
     top: 0;
   }
  10% {
      left: 40%;
  }
   25% {
     top: 400%;
   }
   
   50%{
       left: -35%;
   }
   100% {
     top: 200%;
   }
}
